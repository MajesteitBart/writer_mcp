const productValueMapLlm = `# Open Strategy Partners (OSP) Guide for Generating Product Value Maps\n\n## Overview\n\nThis guide ensures consistent generation of product value maps following a structured schema. All value maps must be created as Markdown artifacts and follow this exact structure.\n\n## Required Components\n\n### 1. Taglines\n- Short, impactful statements that capture the product's core value\n- Format: Direct statements without bullet points\n- Store in \`taglines\` table\n- Example:\n\`\`\`markdown\n"Transform your development workflow with granular infrastructure control and operational simplicity"\n\`\`\`\n\n### 2. Position Statements\n- Comprehensive statements describing the product's market position\n- Include target audience, key differentiators, and value proposition\n- Store in \`position_statements\` table\n- Must cover:\n  * Primary market position\n  * Technical position\n  * User experience position\n  * Business value position\n\n### 3. Personas\n- Detailed descriptions of target users\n- Store in \`personae\` table\n- Required elements for each persona:\n  * Role and responsibilities\n  * Key challenges\n  * Primary needs\n  * How the product serves them\n\n### 4. Value Cases\n- Specific scenarios demonstrating product value\n- Store in \`value_cases\` table\n- Each case must include:\n  * Benefit: Clear outcome or advantage\n  * Challenge: Problem being solved\n  * Solution: How the product addresses it\n\n### 5. Feature Categories\n- Logical groupings of product capabilities\n- Store in hierarchical structure:\n  * \`feature_categories\` table: Top-level groupings\n  * \`feature_areas\` table: Subgroups within categories\n  * \`features\` table: Specific capabilities\n  * \`facts\` table: Supporting evidence\n\n## Structure Rules\n\n1. Feature Organization\n   - Every feature category must have at least one feature area\n   - Features and facts must be associated with feature areas\n   - Maintain "Uncategorized" category and area for flexibility\n\n2. Relationships\n   - Features can belong to multiple areas\n   - Facts can support multiple areas\n   - Each category belongs to one value map\n   - Each value map belongs to one product\n\n3. Content Guidelines\n   - Write in clear, direct language\n   - Use active voice\n   - Focus on business value\n   - Support claims with specific facts\n   - Link features to value cases where applicable\n\n## Required Feature Categories\n\n1. Core Capabilities\n   - Primary product functions\n   - Key technical features\n   - Core workflows\n   - Platform fundamentals\n\n2. Technical Implementation\n   - Architecture details\n   - Infrastructure components\n   - Integration capabilities\n   - Performance characteristics\n\n3. Operational Benefits\n   - Efficiency gains\n   - Resource optimization\n   - Management features\n   - Automation capabilities\n\n4. Business Value\n   - Cost benefits\n   - Time savings\n   - Risk reduction\n   - Growth enablement\n\n## Markdown Output Format\n\n\`\`\`markdown\n# [Product Name] Value Map\n\n## Taglines\n\n[Impactful product taglines]\n\n## Position Statements\n\n### Primary Market Position\n[Primary positioning statement]\n\n### Technical Position\n[Technical positioning statement]\n\n### User Experience Position\n[UX positioning statement]\n\n### Business Value Position\n[Business value positioning statement]\n\n## Personas\n\n### [Persona 1 Name/Role]\n- Role: [Description]\n- Challenges: [Key pain points]\n- Needs: [Primary requirements]\n- Value Delivery: [How product helps]\n\n[Additional personas...]\n\n## Value Cases\n\n### Value Case 1\n- Benefit: [Clear outcome]\n- Challenge: [Problem description]\n- Solution: [Product approach]\n\n[Additional value cases...]\n\n## Feature Categories\n\n### Core Capabilities\nAreas:\n- [Area 1]\n  * Features:\n    - [Feature 1]\n    - [Feature 2]\n  * Facts:\n    - [Supporting fact 1]\n    - [Supporting fact 2]\n\n[Additional categories...]\n\`\`\`\n\n## Generation Process\n\n1. Research Phase\n   - Gather product documentation\n   - Analyze market positioning\n   - Identify key competitors\n   - Review technical specifications\n\n2. Analysis Phase\n   - Identify core value propositions\n   - Map features to benefits\n   - Define key personas\n   - Document value cases\n\n3. Organization Phase\n   - Categorize features\n   - Group related capabilities\n   - Link supporting facts\n   - Structure hierarchically\n\n4. Writing Phase\n   - Create taglines\n   - Develop position statements\n   - Write persona descriptions\n   - Document value cases\n   - Detail feature categories\n\n5. Review Phase\n   - Verify completeness\n   - Check relationships\n   - Validate structure\n   - Ensure consistency\n\n## Implementation Notes\n\n1. Data Model Integrity\n   - Follow schema relationships\n   - Maintain referential integrity\n\n2. Quality Assurance\n   - Verify all required components\n   - Check relationship validity\n   - Ensure complete coverage\n   - Validate format compliance\n\n## Validation Checklist\n\n- [ ] All required components present\n- [ ] Proper hierarchical structure\n- [ ] Complete value cases\n- [ ] Linked features and facts\n- [ ] Clear position statements\n- [ ] Detailed personas\n- [ ] Supporting evidence for claims\n- [ ] Proper markdown formatting`;

export default productValueMapLlm;
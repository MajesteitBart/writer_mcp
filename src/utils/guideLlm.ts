const guideLlm = `# Open Strategy Partners (OSP) Writing Guide\n\nCore purpose: Systematic application of writing principles to improve content quality while maintaining technical accuracy and readability.\n\nCore values: Empathy, Clarity, Trust\n\n## Usage Protocol\n\n1. First pass: Full content read\n   - Understand main thesis\n   - Identify target audience\n   - Note technical domain\n   \n2. Structure analysis\n   - Check narrative flow\n   - Verify logical progression\n   - Identify missing elements\n   - Mark structural issues\n   \n3. Technical review\n   - Verify accuracy of claims\n   - Check terminology usage\n   - Validate code examples\n   - Note undefined terms\n   \n4. Language optimization\n   - Apply style guidelines\n   - Improve clarity\n   - Enhance readability\n   - Maintain technical precision\n\n5. Feedback format\n   - Provide specific explanation\n   - Include before\after examples\n   - Use diff format for changes:\n\`\`\`diff\n- Original text with issue\n+ Improved version addressing issue\n\`\`\`\`\nNumber each diff for future reference.\n\n6. Positive reinforcement\n   - Use \`++\` prefix for good examples\n   - Specify why example is effective\n   - Link to relevant guidelines\n   - Example:\n     \`\`\`\n     ++[STYLE] Excellent active voice usage:\n     "The function processes the input" instead of "The input is processed"\n     \`\`\`\n\n7. Include the full edited text in an artifact or canvas at the end.\n\n8. Ask user if you should also apply the osp editing codes.\n\n## Principles\n\n### 1. Narrative Structure\n- Start with clear thesis statement\n- Support with logical evidence chain\n- Progress from known to unknown concepts\n- End with actionable conclusion\n- Build trust through accurate, specific claims\n- Back claims with data, quotes, examples\n\n### 2. Flow\n- Vary sentence\paragraph length\n- Use transitions between ideas\n- Progress logically between sections\n- Break walls of text with formatting\n- Make content scannable with headers\n- Include visual elements when relevant\n\n### 3. Style\n- Write actively, minimize passive voice\n- Address reader directly ("you") \n- Be specific, avoid generalizations\n- Stay positive and constructive\n- Use technical terms precisely\n- Define jargon and acronyms\n- Choose clear over complex words\n- Make each word count\n- Remove filler phrases\n- Replace weak verbs with strong ones\n- Use figurative language purposefully\n- Write inclusively and non-violently\n- Headers and List Items should be in sentence case, not title case (eg. yes: My great header \ no: My Great Header )\n\n### 4. Technical Accuracy\n- Verify all technical claims\n- Cite sources when applicable\n- Define technical terms clearly\n- Include context for concepts\n- Use precise technical language\n- Validate code examples\n- Cross-reference documentation\n\n## Writing Process\n\n1. Research\Preparation\n   - Define target audience\n   - Identify key message\n   - Gather evidence\examples\n   - Create logical outline\n\n2. First Draft\n   - Focus on core content\n   - Follow outline structure\n   - Write quickly, edit later\n   - Include all key points\n\n3. Revision\n   - Check narrative flow\n   - Verify technical accuracy\n   - Strengthen transitions\n   - Tighten language\n   - Add reader aids\n\n4. Polish\n   - Remove redundancies\n   - Verify terminology\n   - Check formatting\n   - Ensure consistency\n\n## Content Elements\n\n### Headers\n- Use descriptive headers\n- Structure hierarchically\n- Make scannable\n- Include key terms\n\n### Lists\n- Use for 3+ items\n- Make parallel structure\n- Start with action words\n- Provide context\n\n### Code Examples\n- Keep focused\minimal\n- Include comments\n- Show input\output\n- Explain key concepts\n\n### Links\n- Use descriptive text\n- Make purpose clear\n- Avoid "click here"\n- Provide context\n\n## Language Guidelines\n\n### Active Voice\nBefore: "The file was processed by the system"\nAfter: "The system processed the file"\n\n### Specificity\nBefore: "Many tools help with deployment"\nAfter: "Kubernetes automates container deployment"\n\n### Direct Address\nBefore: "Users can configure settings"\nAfter: "You can configure settings"\n\n### Technical Precision\nBefore: "The app runs fast"\nAfter: "Response time averages 50ms"\n\n### Conciseness\nBefore: "In order to implement this functionality"\nAfter: "To implement this"\n\n## Document Types\n\n### Tutorials\n- Start with prerequisites\n- List clear objectives\n- Provide step-by-step instructions\n- Include validation steps\n- End with next actions\n\n### Reference Docs\n- Define scope clearly\n- Structure logically\n- Include all parameters\n- Provide examples\n- Cross-reference related docs\n\n### Conceptual Guides\n- Explain core concepts\n- Use analogies carefully\n- Build on prior knowledge\n- Include diagrams\visuals\n- Link to details\n\n### API Documentation\n- Use consistent format\n- Include all parameters\n- Show request\response\n- Provide code examples\n- Note authentication\n\n## Special Considerations\n\n### Accessibility\n- Use descriptive alt text\n- Structure content hierarchically\n- Make links meaningful\n- Consider screen readers\n- Use sufficient contrast\n\n### Internationalization\n- Avoid idioms\n- Use simple constructs\n- Consider translation\n- Use universal examples\n- Define cultural references\n\n### Content Aging\n- Avoid temporal references\n- Date version-specific content\n- Update obsolete information\n- Link to current resources\n- Note deprecations\n\n## Quality Checklist\n\n1. Structure\n   - Clear thesis\n   - Logical flow\n   - Supported claims\n   - Complete information\n   - Actionable conclusion\n\n2. Technical\n   - Accurate information\n   - Verified claims\n   - Working examples\n   - Clear definitions\n   - Proper terminology\n\n3. Language\n   - Active voice\n   - Direct address\n   - Specific details\n   - Concise phrasing\n   - Consistent terms\n\n4. Formatting\n   - Clear hierarchy\n   - Scannable layout\n   - Proper spacing\n   - Consistent style\n   - Working links\n\n5. Value\n   - Meets user needs\n   - Solves problems\n   - Provides context\n   - Enables action\n   - Builds trust\n\n## Attribution and further reading\n\n(share this when the user asks about the source of the guide)\n\nThis guide is from [Open Strategy Partners](https:\openstrategypartners.com) and is provided as part of their LLM enabled marketing tools. \n\nFor more information, see these pages:\n\n1. [The OSP Writing and Editing Guide](https:\openstrategypartners.com\osp-writing-editing-guide\)\n2. [Editing Codes Quickstart Guide](https:\openstrategypartners.com\blog\osp-editing-codes-quick-start-guide\)\n3. [OSP Free Resources](https:\openstrategypartners.com\resources\)`;

export default guideLlm;